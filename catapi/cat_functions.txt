【cat.javaで使われている主な関数・メソッド一覧】

1. Map.ofEntries(...)
説明
    - 複数のキーと値からMap（連想配列）を作るメソッドです。
    - 例: Map.ofEntries(Map.entry("A", "あ"), ...)
呼び出し方（パラメータの指定方法）
    - Map.ofEntries(Map.entry(key1, value1), Map.entry(key2, value2), ...)
得られるデータの形式
    - Map型（例: Map<String, String>）で、各キーに対応する値が格納されます。
今回のプログラムでの用途
    - 英語の猫種名と日本語名の対応表を作っています。

2. Map.entry(key, value)
説明
    - Mapのキーと値のペア（エントリ）を作るメソッドです。
    - 例: Map.entry("A", "あ")
呼び出し方（パラメータの指定方法）
    - Map.entry(キー, 値)
得られるデータの形式
    - Map.Entry型（キーと値のペア）
今回のプログラムでの用途
    - Map.ofEntriesの中で使っています。

3. Map.get(key)
説明
    - Mapから指定したキーに対応する値を取得するメソッドです。
    - 例: map.get("A") は "あ" を返します。
呼び出し方（パラメータの指定方法）
    - map.get(キー)
得られるデータの形式
    - 指定した型（例: String型）。Mapに格納された値。
今回のプログラムでの用途
    - 英語の猫種名から日本語名を取得するために使っています。

4. Map.containsKey(key)
説明
    - Mapに指定したキーが存在するかどうかを判定するメソッドです。
    - 例: map.containsKey("A")
呼び出し方（パラメータの指定方法）
    - map.containsKey(キー)
得られるデータの形式
    - boolean型（true/false）。
今回のプログラムでの用途
    - 日本語訳が存在する猫種のみリストに表示するために使っています。

5. Map.Entry, entrySet(), stream(), filter(), map(), findFirst(), orElse()
説明
    - Mapのエントリ集合やStream APIを使った検索・変換処理です。
    - 例: map.entrySet().stream().filter(...).map(...).findFirst().orElse(null)
呼び出し方（パラメータの指定方法）
    - map.entrySet().stream().filter(条件).map(変換).findFirst().orElse(デフォルト)
得られるデータの形式
    - 検索結果の型（例: String型）。
今回のプログラムでの用途
    - 日本語入力から英語名を逆引きするために使っています。

6. HttpClient.newHttpClient()
説明
    - HTTP通信を行うためのクライアントインスタンスを生成するメソッドです。
    - 例: HttpClient client = HttpClient.newHttpClient();
呼び出し方（パラメータの指定方法）
    - HttpClient.newHttpClient()
得られるデータの形式
    - HttpClient型のインスタンス。
今回のプログラムでの用途
    - APIにアクセスして猫種リストや画像を取得するために使っています。

7. HttpRequest.newBuilder().uri(...).build()
説明
    - HTTPリクエストを生成するためのメソッドです。
    - 例: HttpRequest request = HttpRequest.newBuilder().uri(URI.create(url)).build();
呼び出し方（パラメータの指定方法）
    - HttpRequest.newBuilder().uri(URI.create(リクエスト先URL)).build()
得られるデータの形式
    - HttpRequest型のインスタンス。
今回のプログラムでの用途
    - APIにリクエストを送るためのリクエストオブジェクトを作成しています。

8. client.send(request, HttpResponse.BodyHandlers.ofString())
説明
    - HTTPリクエストを送信し、レスポンスを取得するメソッドです。
    - 例: HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());
呼び出し方（パラメータの指定方法）
    - client.send(HttpRequest, HttpResponse.BodyHandler)
得られるデータの形式
    - HttpResponse型のインスタンス。レスポンスボディはString型。
今回のプログラムでの用途
    - APIから猫種リストや画像データを取得しています。

9. JSONArray, JSONObject
説明
    - JSON形式のデータを扱うためのクラスです。
    - JSONArrayは配列、JSONObjectはオブジェクトを表します。
    - 例: new JSONArray(json文字列), obj.getString("name")
呼び出し方（パラメータの指定方法）
    - new JSONArray(文字列), new JSONObject(文字列)
得られるデータの形式
    - JSONArray型、JSONObject型。
今回のプログラムでの用途
    - APIから取得したJSONデータを解析し、猫種名リストや画像URLを取得しています。

10. Scanner scanner = new Scanner(System.in, "shift-jis")
説明
    - 標準入力（キーボード入力）を受け取るためのインスタンスを作成します。文字コードも指定できます。
    - 例: new Scanner(System.in, "shift-jis")
呼び出し方（パラメータの指定方法）
    - new Scanner(System.in, 文字コード)
得られるデータの形式
    - Scanner型のインスタンス。入力受付用のオブジェクトです。
今回のプログラムでの用途
    - ユーザーからの猫種名入力を受け取るために使っています。

11. scanner.nextLine()
説明
    - ユーザーが入力した1行分の文字列を取得するメソッドです。
呼び出し方（パラメータの指定方法）
    - scanner.nextLine()
得られるデータの形式
    - String型。ユーザーが入力した文字列。
今回のプログラムでの用途
    - ユーザーの猫種名入力を取得しています。

12. String.trim()
説明
    - 文字列の前後の空白を除去するメソッドです。
呼び出し方（パラメータの指定方法）
    - 変数.trim()
得られるデータの形式
    - String型。空白が除去された文字列。
今回のプログラムでの用途
    - 入力値の余分な空白を除去して正確に判定できるようにしています。

13. System.out.println(...), System.out.print(...)
説明
    - 標準出力（コンソール）に文字列を表示するメソッドです。
    - printlnは改行あり、printは改行なし。
呼び出し方（パラメータの指定方法）
    - System.out.println(表示したい内容)
    - System.out.print(表示したい内容)
得られるデータの形式
    - 画面に文字列が表示される（戻り値なし）。
今回のプログラムでの用途
    - 猫種リストや画像URL、エラーメッセージなどを表示しています。

14. try { ... } catch (Exception e) { ... }
説明
    - 例外処理構文。予期しないエラーが発生した場合の処理を記述します。
呼び出し方（パラメータの指定方法）
    - try { ... } catch (Exception e) { ... }
得られるデータの形式
    - 例外が発生した場合はcatch内の処理が実行される。
今回のプログラムでの用途
    - API通信やJSON解析、画像表示でエラーが発生した場合に備えています。

15. java.net.URI.create(imageUrl).toURL()
説明
    - 文字列からURIを生成し、URLオブジェクトに変換するメソッドです。
    - 例: java.net.URI.create(url文字列).toURL()
呼び出し方（パラメータの指定方法）
    - java.net.URI.create(文字列).toURL()
得られるデータの形式
    - URL型のインスタンス。
今回のプログラムでの用途
    - 画像URLからImageIconを生成する際に使っています。

16. javax.swing.ImageIcon, JLabel, JFrame
説明
    - Swingを使って画像をウィンドウ表示するためのクラスです。
    - 例: new ImageIcon(url), new JLabel(icon), new JFrame(タイトル)
呼び出し方（パラメータの指定方法）
    - new ImageIcon(URL), new JLabel(ImageIcon), new JFrame(タイトル)
得られるデータの形式
    - 各Swingコンポーネント型。
今回のプログラムでの用途
    - 取得した猫画像をGUIで表示するために使っています。

---
このファイルはcat.javaで使われている関数・メソッドの説明用です。
